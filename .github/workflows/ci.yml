name: CI

on:
  push: { branches: [main] }
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            qt: 6.6.3
            qt_arch: linux_gcc_64
          - os: macos-14
            qt: 6.6.3
            qt_arch: macos
          - os: windows-latest
            qt: 6.6.3
            qt_arch: win64_msvc2022_64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: seanmiddleditch/gha-setup-ninja@v4

      - uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ccache-${{ matrix.os }}-qt${{ matrix.qt }}

      - name: Install Qt ${{ matrix.qt }}
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt }}
          arch: ${{ matrix.qt_arch }}
          modules: |
            qt5compat
            qtimageformats
            qtmultimedia

      - name: macOS deps
        if: startsWith(matrix.os, 'macos')
        run: brew install ccache || true

      - name: Linux deps
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y ccache

      - name: Skip if no CMake project
        shell: bash
        run: |
          if [ ! -f CMakeLists.txt ]; then
            echo "No CMakeLists.txt in this branch. Skipping build."
            exit 0
          fi

      - name: Configure (CMake)
        run: |
          cmake -S . -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build
        run: cmake --build build -j

      - name: Export compile_commands.json (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cmake -S . -B build-commands -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
          cp build-commands/compile_commands.json ./

      - name: Test (ctest)
        run: ctest --test-dir build --output-on-failure || true

      - name: Upload build dir on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: build
